name: Build ubuntu images

on:
  schedule:
    - cron: 0 12 */7 * *
  push:
    paths:
      - '.github/workflows/build-linux.yml'
      - 'images/linux/**'
    branches:
      - 'master'
  pull_request:
    paths:
      - '.github/workflows/build-linux.yml'
      - 'images/linux/**'
  workflow_dispatch:

jobs:
  build-base:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      max-parallel: 4
      matrix:
        version: [2004, 1804]
    steps:
      - uses: actions/checkout@v2

      - name: Clean runner
        run: |
          echo "::group::cleanup"
          paths=(
              "/opt"
              "/usr/local/share/boost"
              "$AGENT_TOOLSDIRECTORY"
              "/usr/share/dotnet/"
              "$ANDROID_SDK_ROOT"
              "/usr/local/lib/android"
              "$SWIFT_PATH"
              "/usr/share/swift"
              "/usr/share/rust"
              "/usr/local/share/vcpkg"
              "/usr/share/miniconda"
              /usr/share/apache-maven-*
              "/usr/lib/node_modules"
              "/usr/share/sbt"
              "/usr/share/java"
              /usr/share/gradle-*
              "/usr/lib/jvm"
              "/usr/share/ant"
              "/home/linuxbrew"
              "/usr/local/share/chrome_driver"
              "/usr/local/share/gecko_driver"
              "/usr/local/share/chromium"
              /usr/local/share/phantomjs*
              "/usr/local/share/powershell"
              /usr/local/share/cmake-*
              "/usr/local/share/.cache"
              /usr/share/ImageMagick*
              /usr/share/az_*
              /usr/share/mono*
              /usr/share/php*
              "/usr/local/lib"
          )
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo rm -rf ${paths[@]}
          ls -lah /usr/local/share
          ls -lah /usr/share
          ls -lah /usr/lib
          #sudo docker system prune -a -f
          sudo apt-get -yq update
          sudo apt-get -y autoremove
          sudo apt-get -y clean
          #sudo apt-get update
          df -H -a
          ls -lahR /mnt
          echo "::endgroup::"

      - name: Build `ubuntu:full-${{ matrix.version }}`
        run: |
          echo "::group::packer"
          packer build -var "image_version=$(date +%Y%m%d)" ubuntu${{ matrix.version }}.json
          echo "::endgroup::"
        working-directory: images/linux/
        env:
          GHCR_USERNAME: ${{ github.repository_owner }}
          GHCR_PASSWORD: ${{ github.token }}
